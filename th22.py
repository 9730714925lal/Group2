import graphlab products = graphlab.SFrame.read_csv('phones.csv') products.head() products['word_count'] = graphlab.text_analytics.count_words(products['review']) products.head() graphlab.canvas.set_target('ipynb') products['name'].show() Apple_reviews = products[products['name'] == 'Apple iPhone 3G 8GB Black'] len(Apple_reviews) Apple_reviews['rating'].show(view='Categorical') #ignore all 3* reviews products = products[products['rating'] != 3] #positive sentiment = 4* or 5* reviews products['sentiment'] = products['rating'] >=4 products.head() selected_words = ['awesome', 'great', 'fantastic', 'amazing', 'love', 'horrible', 'terrible', 'awful','wow', 'hate', 'good','best', 'better', 'first', 'many', 'old','easy', 'nice', 'little', 'much', 'smart', 'able', 'last','bad','big', 'slow', 'happy', 'available'] def current_selected_word_count(word_count): if i in word_count: return word_count[i] return 0 i = '' for i in selected_words: products[i] = products['word_count'].apply(current_selected_word_count) products.tail()
#logisticclassifier train_data,test_data = products.random_split(.8, seed=0) selected_words_model = graphlab.logistic_classifier.create(train_data, target='sentiment', features=selected_words, validation_set=test_data) selected_words_model.evaluate(test_data, metric='roc_curve') selected_words_model.show(view='Evaluation') Apple_reviews = products[products['name'] == 'Apple iPhone 3G 8GB Black'] len(Apple_reviews) Apple_reviews['predicted_sentiment'] = selected_words_model.predict(Apple_reviews, output_type='probability') Apple_reviews.sort('predicted_sentiment', ascending=False)
#most positive review Apple_reviews.sort('predicted_sentiment', ascending=False)[0]['review'] Apple_reviews.sort('predicted_sentiment', ascending=False)[1]['review']
#most negative review Apple_reviews.sort('predicted_sentiment', ascending=False)[-1]['review'] Apple_reviews.sort('predicted_sentiment', ascending=False)[-2]['review']